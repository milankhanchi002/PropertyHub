{"ast":null,"code":"const BASE_URL = \"http://localhost:8080/api\"; // Gateway URL\n\n// Auth APIs\n\n// Admin APIs\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`);\n  return res.json();\n}\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\"\n  });\n  return res.json();\n}\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// Property APIs\nexport async function getProperties() {\n  const res = await fetch(`${BASE_URL}/properties`);\n  return res.json();\n}\nexport async function createProperty(data) {\n  const res = await fetch(`${BASE_URL}/properties`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// Booking APIs\nexport async function createBooking(userId, propertyId) {\n  const res = await fetch(`${BASE_URL}/bookings/leases?userId=${userId}&propertyId=${propertyId}`, {\n    method: \"POST\"\n  });\n  return res.json();\n}\nexport async function getBookings() {\n  const res = await fetch(`${BASE_URL}/bookings`);\n  return res.json();\n}\n\n// Payment APIs\nexport async function makePayment(leaseId, amountCents) {\n  const res = await fetch(`${BASE_URL}/payments?leaseId=${leaseId}&amountCents=${amountCents}`, {\n    method: \"POST\"\n  });\n  return res.json();\n}","map":{"version":3,"names":["BASE_URL","getAdminProperties","res","fetch","json","toggleProperty","id","method","registerUser","data","headers","body","JSON","stringify","loginUser","getProperties","createProperty","createBooking","userId","propertyId","getBookings","makePayment","leaseId","amountCents"],"sources":["/Users/milankhanchi/Downloads/propertyhub_project/frontend/src/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8080/api\"; // Gateway URL\n\n// Auth APIs\n\n// Admin APIs\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`);\n  return res.json();\n}\n\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\",\n  });\n  return res.json();\n}\n\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// Property APIs\nexport async function getProperties() {\n  const res = await fetch(`${BASE_URL}/properties`);\n  return res.json();\n}\n\nexport async function createProperty(data) {\n  const res = await fetch(`${BASE_URL}/properties`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// Booking APIs\nexport async function createBooking(userId, propertyId) {\n  const res = await fetch(`${BASE_URL}/bookings/leases?userId=${userId}&propertyId=${propertyId}`, {\n    method: \"POST\",\n  });\n  return res.json();\n}\n\nexport async function getBookings() {\n  const res = await fetch(`${BASE_URL}/bookings`);\n  return res.json();\n}\n\n// Payment APIs\nexport async function makePayment(leaseId, amountCents) {\n  const res = await fetch(`${BASE_URL}/payments?leaseId=${leaseId}&amountCents=${amountCents}`, {\n    method: \"POST\",\n  });\n  return res.json();\n}\n\n\n\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C;;AAEA;AACA,OAAO,eAAeC,kBAAkBA,CAAA,EAAG;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,mBAAmB,CAAC;EACvD,OAAOE,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,cAAcA,CAACC,EAAE,EAAE;EACvC,MAAMJ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,qBAAqBM,EAAE,SAAS,EAAE;IACnEC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOL,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeI,YAAYA,CAACC,IAAI,EAAE;EACvC,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,gBAAgB,EAAE;IACnDO,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOP,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeU,SAASA,CAACL,IAAI,EAAE;EACpC,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,aAAa,EAAE;IAChDO,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOP,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeW,aAAaA,CAAA,EAAG;EACpC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,aAAa,CAAC;EACjD,OAAOE,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeY,cAAcA,CAACP,IAAI,EAAE;EACzC,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,aAAa,EAAE;IAChDO,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOP,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAea,aAAaA,CAACC,MAAM,EAAEC,UAAU,EAAE;EACtD,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,2BAA2BkB,MAAM,eAAeC,UAAU,EAAE,EAAE;IAC/FZ,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOL,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAegB,WAAWA,CAAA,EAAG;EAClC,MAAMlB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,WAAW,CAAC;EAC/C,OAAOE,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeiB,WAAWA,CAACC,OAAO,EAAEC,WAAW,EAAE;EACtD,MAAMrB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,qBAAqBsB,OAAO,gBAAgBC,WAAW,EAAE,EAAE;IAC5FhB,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOL,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}