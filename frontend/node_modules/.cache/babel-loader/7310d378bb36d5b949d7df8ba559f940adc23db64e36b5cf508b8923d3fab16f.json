{"ast":null,"code":"const BASE_URL = \"http://localhost:8080/api\";\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\n\n// ================= Auth APIs =================\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// ================= Admin APIs =================\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return res.json();\n}\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return res.json();\n}\n\n// ================= Property APIs =================\nexport async function getProperties(params = {}) {\n  const query = new URLSearchParams(params).toString();\n  const url = query ? `${BASE_URL}/properties?${query}` : `${BASE_URL}/properties`;\n  const res = await fetch(url);\n  return res.json();\n}\nexport async function getProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`);\n  return res.json();\n}\nexport async function createProperty(data, ownerId) {\n  const res = await fetch(`${BASE_URL}/properties?ownerId=${ownerId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// ================= Visit APIs =================\nexport async function bookVisit(propertyId, data) {\n  const res = await fetch(`${BASE_URL}/visits/book?propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// ================= Optional Booking / Payment APIs =================\nexport async function createBooking(userId, propertyId) {\n  const res = await fetch(`${BASE_URL}/bookings/leases?userId=${userId}&propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return res.json();\n}\nexport async function getBookings() {\n  const res = await fetch(`${BASE_URL}/bookings`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return res.json();\n}\nexport async function makePayment(leaseId, amountCents) {\n  const res = await fetch(`${BASE_URL}/payments?leaseId=${leaseId}&amountCents=${amountCents}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return res.json();\n}","map":{"version":3,"names":["BASE_URL","getToken","localStorage","getItem","registerUser","data","res","fetch","method","headers","body","JSON","stringify","json","loginUser","getAdminProperties","Authorization","toggleProperty","id","getProperties","params","query","URLSearchParams","toString","url","getProperty","createProperty","ownerId","bookVisit","propertyId","createBooking","userId","getBookings","makePayment","leaseId","amountCents"],"sources":["/Users/milankhanchi/Downloads/propertyhub_project/frontend/src/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8080/api\";\n\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\n\n// ================= Auth APIs =================\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// ================= Admin APIs =================\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`, {\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  return res.json();\n}\n\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\",\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  return res.json();\n}\n\n// ================= Property APIs =================\nexport async function getProperties(params = {}) {\n  const query = new URLSearchParams(params).toString();\n  const url = query ? `${BASE_URL}/properties?${query}` : `${BASE_URL}/properties`;\n\n  const res = await fetch(url);\n  return res.json();\n}\n\nexport async function getProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`);\n  return res.json();\n}\n\nexport async function createProperty(data, ownerId) {\n  const res = await fetch(`${BASE_URL}/properties?ownerId=${ownerId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// ================= Visit APIs =================\nexport async function bookVisit(propertyId, data) {\n  const res = await fetch(`${BASE_URL}/visits/book?propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// ================= Optional Booking / Payment APIs =================\nexport async function createBooking(userId, propertyId) {\n  const res = await fetch(`${BASE_URL}/bookings/leases?userId=${userId}&propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  return res.json();\n}\n\nexport async function getBookings() {\n  const res = await fetch(`${BASE_URL}/bookings`, {\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  return res.json();\n}\n\nexport async function makePayment(leaseId, amountCents) {\n  const res = await fetch(`${BASE_URL}/payments?leaseId=${leaseId}&amountCents=${amountCents}`, {\n    method: \"POST\",\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  return res.json();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}