{"ast":null,"code":"// src/api.js\nconst BASE_URL = \"http://localhost:8080/api\";\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\n\n// ================= Helper (No changes needed) =================\nasync function handleResponse(res) {\n  const text = await res.text();\n  let data;\n  try {\n    data = text ? JSON.parse(text) : {};\n  } catch {\n    data = text;\n  }\n  if (!res.ok) {\n    var _data, _data2;\n    const errorMsg = ((_data = data) === null || _data === void 0 ? void 0 : _data.error) || ((_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.message) || res.statusText || \"Server error\";\n    throw new Error(errorMsg);\n  }\n  return data;\n}\n\n// ================= Auth APIs (No changes needed) =================\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\n// ================= Admin APIs (No changes needed) =================\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\n\n// ================= Property APIs (Updates below) =================\nexport async function getProperties(params = {}) {\n  // Clear any empty parameters to avoid things like 'city=' in the URL\n  const cleanParams = Object.fromEntries(Object.entries(params).filter(([_, v]) => v != null && v !== ''));\n  const query = new URLSearchParams(cleanParams).toString();\n\n  // ✅ CHANGED: Pointing to the correct '/search' endpoint for filtering.\n  const url = query ? `${BASE_URL}/properties/search?${query}` : `${BASE_URL}/properties/search`;\n  const res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function getProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    // ✅ ADDED: Authorization header for consistency and security.\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\n\n// --- No changes to the functions below ---\n\nexport async function createProperty(data, ownerId) {\n  const res = await fetch(`${BASE_URL}/properties?ownerId=${ownerId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function deleteProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function updateProperty(id, data) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\n// ================= Visit APIs (No changes needed) =================\nexport async function bookVisit(propertyId, data) {\n  const res = await fetch(`${BASE_URL}/visits/book?propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\n// ================= Booking / Payment APIs (No changes needed) =================\nexport async function createBooking(userId, propertyId) {\n  const res = await fetch(`${BASE_URL}/bookings/leases?userId=${userId}&propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function getBookings() {\n  const res = await fetch(`${BASE_URL}/bookings`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function makePayment(leaseId, amountCents) {\n  const res = await fetch(`${BASE_URL}/payments?leaseId=${leaseId}&amountCents=${amountCents}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}","map":{"version":3,"names":["BASE_URL","getToken","localStorage","getItem","handleResponse","res","text","data","JSON","parse","ok","_data","_data2","errorMsg","error","message","statusText","Error","registerUser","fetch","method","headers","body","stringify","loginUser","getAdminProperties","Authorization","toggleProperty","id","getProperties","params","cleanParams","Object","fromEntries","entries","filter","_","v","query","URLSearchParams","toString","url","getProperty","createProperty","ownerId","deleteProperty","updateProperty","bookVisit","propertyId","createBooking","userId","getBookings","makePayment","leaseId","amountCents"],"sources":["/Users/milankhanchi/Downloads/propertyhub_project/frontend/src/api.js"],"sourcesContent":["// src/api.js\nconst BASE_URL = \"http://localhost:8080/api\";\n\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\n\n// ================= Helper (No changes needed) =================\nasync function handleResponse(res) {\n  const text = await res.text();\n  let data;\n  try {\n    data = text ? JSON.parse(text) : {};\n  } catch {\n    data = text;\n  }\n\n  if (!res.ok) {\n    const errorMsg = data?.error || data?.message || res.statusText || \"Server error\";\n    throw new Error(errorMsg);\n  }\n\n  return data;\n}\n\n// ================= Auth APIs (No changes needed) =================\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return handleResponse(res);\n}\n\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return handleResponse(res);\n}\n\n// ================= Admin APIs (No changes needed) =================\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`, {\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return handleResponse(res);\n}\n\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\",\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return handleResponse(res);\n}\n\n// ================= Property APIs (Updates below) =================\nexport async function getProperties(params = {}) {\n  // Clear any empty parameters to avoid things like 'city=' in the URL\n  const cleanParams = Object.fromEntries(\n    Object.entries(params).filter(([_, v]) => v != null && v !== '')\n  );\n\n  const query = new URLSearchParams(cleanParams).toString();\n\n  // ✅ CHANGED: Pointing to the correct '/search' endpoint for filtering.\n  const url = query ? `${BASE_URL}/properties/search?${query}` : `${BASE_URL}/properties/search`;\n\n  const res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n\n  return handleResponse(res);\n}\n\nexport async function getProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    // ✅ ADDED: Authorization header for consistency and security.\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\n\n// --- No changes to the functions below ---\n\nexport async function createProperty(data, ownerId) {\n  const res = await fetch(`${BASE_URL}/properties?ownerId=${ownerId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(data),\n  });\n  return handleResponse(res);\n}\n\nexport async function deleteProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    method: \"DELETE\",\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return handleResponse(res);\n}\n\nexport async function updateProperty(id, data) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(data),\n  });\n  return handleResponse(res);\n}\n\n// ================= Visit APIs (No changes needed) =================\nexport async function bookVisit(propertyId, data) {\n  const res = await fetch(`${BASE_URL}/visits/book?propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(data),\n  });\n  return handleResponse(res);\n}\n\n// ================= Booking / Payment APIs (No changes needed) =================\nexport async function createBooking(userId, propertyId) {\n  const res = await fetch(`${BASE_URL}/bookings/leases?userId=${userId}&propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return handleResponse(res);\n}\n\nexport async function getBookings() {\n  const res = await fetch(`${BASE_URL}/bookings`, {\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return handleResponse(res);\n}\n\nexport async function makePayment(leaseId, amountCents) {\n  const res = await fetch(`${BASE_URL}/payments?leaseId=${leaseId}&amountCents=${amountCents}`, {\n    method: \"POST\",\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return handleResponse(res);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}