{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgsm4\\\\OneDrive\\\\Desktop\\\\milan\\\\PropertyHub\\\\frontend\\\\src\\\\components\\\\Toast.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext();\nexport const useToast = () => {\n  _s();\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n_s(useToast, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ToastProvider = ({\n  children\n}) => {\n  _s2();\n  const [toasts, setToasts] = useState([]);\n  const addToast = useCallback((message, type = 'info') => {\n    const id = Date.now();\n    const toast = {\n      id,\n      message,\n      type\n    };\n    setToasts(prev => [...prev, toast]);\n    setTimeout(() => {\n      setToasts(prev => prev.filter(t => t.id !== id));\n    }, 5000);\n  }, []);\n  const removeToast = useCallback(id => {\n    setToasts(prev => prev.filter(t => t.id !== id));\n  }, []);\n  const toast = {\n    success: message => addToast(message, 'success'),\n    error: message => addToast(message, 'error'),\n    info: message => addToast(message, 'info'),\n    warning: message => addToast(message, 'warning')\n  };\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: toast,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-container\",\n      children: toasts.map(toast => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => removeToast(toast.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toast-icon\",\n            children: [toast.type === 'success' && '✓', toast.type === 'error' && '✕', toast.type === 'warning' && '⚠', toast.type === 'info' && 'ℹ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toast-message\",\n            children: toast.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, toast.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(ToastProvider, \"tmfEFb4ovUrwhRRzkxJL7vA7ka4=\");\n_c = ToastProvider;\nvar _c;\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","ToastContext","useToast","_s","context","Error","ToastProvider","children","_s2","toasts","setToasts","addToast","message","type","id","Date","now","toast","prev","setTimeout","filter","t","removeToast","success","error","info","warning","Provider","value","className","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mgsm4/OneDrive/Desktop/milan/PropertyHub/frontend/src/components/Toast.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst ToastContext = createContext();\n\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\nexport const ToastProvider = ({ children }) => {\n  const [toasts, setToasts] = useState([]);\n\n  const addToast = useCallback((message, type = 'info') => {\n    const id = Date.now();\n    const toast = { id, message, type };\n    setToasts(prev => [...prev, toast]);\n    \n    setTimeout(() => {\n      setToasts(prev => prev.filter(t => t.id !== id));\n    }, 5000);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(t => t.id !== id));\n  }, []);\n\n  const toast = {\n    success: (message) => addToast(message, 'success'),\n    error: (message) => addToast(message, 'error'),\n    info: (message) => addToast(message, 'info'),\n    warning: (message) => addToast(message, 'warning'),\n  };\n\n  return (\n    <ToastContext.Provider value={toast}>\n      {children}\n      <div className=\"toast-container\">\n        {toasts.map(toast => (\n          <div\n            key={toast.id}\n            className={`toast toast-${toast.type}`}\n            onClick={() => removeToast(toast.id)}\n          >\n            <div className=\"toast-content\">\n              <span className=\"toast-icon\">\n                {toast.type === 'success' && '✓'}\n                {toast.type === 'error' && '✕'}\n                {toast.type === 'warning' && '⚠'}\n                {toast.type === 'info' && 'ℹ'}\n              </span>\n              <span className=\"toast-message\">{toast.message}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </ToastContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}