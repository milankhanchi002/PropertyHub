{"ast":null,"code":"// src/api.js\nconst BASE_URL = \"http://localhost:8080/api\";\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\n\n// ================= Helper =================\nasync function handleResponse(res) {\n  const text = await res.text();\n  let data;\n  try {\n    data = text ? JSON.parse(text) : {};\n  } catch {\n    data = text;\n  }\n  if (!res.ok) {\n    var _data, _data2;\n    const errorMsg = ((_data = data) === null || _data === void 0 ? void 0 : _data.error) || ((_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.message) || res.statusText || \"Server error\";\n    throw new Error(errorMsg);\n  }\n  return data;\n}\n\n// ================= Auth APIs =================\nexport async function registerUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function loginUser(data) {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\n// ================= Admin APIs =================\nexport async function getAdminProperties() {\n  const res = await fetch(`${BASE_URL}/admin/properties`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function toggleProperty(id) {\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\n\n// ================= Property APIs =================\nexport async function getProperties(params = {}) {\n  const query = new URLSearchParams(params).toString();\n  const url = query ? `${BASE_URL}/properties?${query}` : `${BASE_URL}/properties`;\n  const res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${getToken()}` // ⚡ Add Authorization header\n    }\n  });\n  return handleResponse(res);\n}\nexport async function getProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`);\n  return handleResponse(res);\n}\nexport async function createProperty(data, ownerId) {\n  const res = await fetch(`${BASE_URL}/properties?ownerId=${ownerId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function deleteProperty(id) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\nexport async function updateProperty(id, data) {\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\n// ================= Visit APIs =================\nexport async function bookVisit(propertyId, data) {\n  const res = await fetch(`${BASE_URL}/visits/book?propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function getVisits() {\n  const res = await fetch(`${BASE_URL}/visits`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\n\n// ================= Lease APIs =================\nexport async function createLease(propertyId, data) {\n  const res = await fetch(`${BASE_URL}/leases?propertyId=${propertyId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function getLeases() {\n  const res = await fetch(`${BASE_URL}/leases`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}\n\n// ================= Search API =================\nexport async function searchProperties(filters = {}) {\n  const query = new URLSearchParams();\n  if (filters.city) query.append('city', filters.city);\n  if (filters.type) query.append('type', filters.type);\n  if (filters.min) query.append('min', filters.min);\n  if (filters.max) query.append('max', filters.max);\n  const url = `${BASE_URL}/properties/search?${query.toString()}`;\n  const res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(res);\n}","map":{"version":3,"names":["BASE_URL","getToken","localStorage","getItem","handleResponse","res","text","data","JSON","parse","ok","_data","_data2","errorMsg","error","message","statusText","Error","registerUser","fetch","method","headers","body","stringify","loginUser","getAdminProperties","Authorization","toggleProperty","id","getProperties","params","query","URLSearchParams","toString","url","getProperty","createProperty","ownerId","deleteProperty","updateProperty","bookVisit","propertyId","getVisits","createLease","getLeases","searchProperties","filters","city","append","type","min","max"],"sources":["/Users/milankhanchi/propertyHubclone/PropertyHub/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nconst BASE_URL = \"http://localhost:8080/api\";\r\n\r\nfunction getToken() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\n// ================= Helper =================\r\nasync function handleResponse(res) {\r\n  const text = await res.text();\r\n  let data;\r\n  try {\r\n    data = text ? JSON.parse(text) : {};\r\n  } catch {\r\n    data = text;\r\n  }\r\n\r\n  if (!res.ok) {\r\n    const errorMsg = data?.error || data?.message || res.statusText || \"Server error\";\r\n    throw new Error(errorMsg);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// ================= Auth APIs =================\r\nexport async function registerUser(data) {\r\n  const res = await fetch(`${BASE_URL}/auth/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\nexport async function loginUser(data) {\r\n  const res = await fetch(`${BASE_URL}/auth/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\n// ================= Admin APIs =================\r\nexport async function getAdminProperties() {\r\n  const res = await fetch(`${BASE_URL}/admin/properties`, {\r\n    headers: { Authorization: `Bearer ${getToken()}` },\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\nexport async function toggleProperty(id) {\r\n  const res = await fetch(`${BASE_URL}/admin/properties/${id}/toggle`, {\r\n    method: \"PUT\",\r\n    headers: { Authorization: `Bearer ${getToken()}` },\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\n// ================= Property APIs =================\r\nexport async function getProperties(params = {}) {\r\n  const query = new URLSearchParams(params).toString();\r\n  const url = query ? `${BASE_URL}/properties?${query}` : `${BASE_URL}/properties`;\r\n\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      Authorization: `Bearer ${getToken()}`  // ⚡ Add Authorization header\r\n    }\r\n  });\r\n\r\n  return handleResponse(res);\r\n}\r\n\r\n\r\nexport async function getProperty(id) {\r\n  const res = await fetch(`${BASE_URL}/properties/${id}`);\r\n  return handleResponse(res);\r\n}\r\n\r\nexport async function createProperty(data, ownerId) {\r\n  const res = await fetch(`${BASE_URL}/properties?ownerId=${ownerId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\nexport async function deleteProperty(id) {\r\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: `Bearer ${getToken()}` },\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\n\r\nexport async function updateProperty(id, data) {\r\n  const res = await fetch(`${BASE_URL}/properties/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\n// ================= Visit APIs =================\r\nexport async function bookVisit(propertyId, data) {\r\n  const res = await fetch(`${BASE_URL}/visits/book?propertyId=${propertyId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\nexport async function getVisits() {\r\n  const res = await fetch(`${BASE_URL}/visits`, {\r\n    headers: { Authorization: `Bearer ${getToken()}` },\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\n// ================= Lease APIs =================\r\nexport async function createLease(propertyId, data) {\r\n  const res = await fetch(`${BASE_URL}/leases?propertyId=${propertyId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\nexport async function getLeases() {\r\n  const res = await fetch(`${BASE_URL}/leases`, {\r\n    headers: { Authorization: `Bearer ${getToken()}` },\r\n  });\r\n  return handleResponse(res);\r\n}\r\n\r\n// ================= Search API =================\r\nexport async function searchProperties(filters = {}) {\r\n  const query = new URLSearchParams();\r\n  \r\n  if (filters.city) query.append('city', filters.city);\r\n  if (filters.type) query.append('type', filters.type);\r\n  if (filters.min) query.append('min', filters.min);\r\n  if (filters.max) query.append('max', filters.max);\r\n  \r\n  const url = `${BASE_URL}/properties/search?${query.toString()}`;\r\n  \r\n  const res = await fetch(url, {\r\n    headers: { Authorization: `Bearer ${getToken()}` },\r\n  });\r\n  return handleResponse(res);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}